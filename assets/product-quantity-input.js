class ProductQuantityInput extends HTMLElement{constructor(){super(),this.input=this.querySelector("#required-metres-squared"),this.price=this.dataset.price,this.packSize=Number(this.dataset.packSize),this.minQty=this.dataset.minQty,this.evenPacks=this.dataset.evenPacks,this.packPrice=this.dataset.packPrice,this.wasteageFee=this.querySelector("#wastage-fee"),this.totalPrice=this.querySelector("#total-price"),this.tooltip=this.querySelector("#product-tooltip"),this.rrpSavings=this.querySelector("#rrp-savings"),this.submitButton=document.querySelector(".button--submit"),this.type=this.dataset.type,this.rollWidth=this.dataset.productRollWidth,this.boardSize=this.dataset.boardSize,this.altMetreInput=this.querySelector("#required-metres-squared-alternative"),this.width=this.dataset.width,this.length=this.dataset.length,this.tilesPerPack=this.dataset.tilesPerPack,this.minQtyNotice=this.querySelector("#product-minimum-quantity-notice"),null!==this.wasteageFee&&this.wasteageFee.addEventListener("change",()=>this.wasteageCheck(this.wasteageFee.checked)),null!==this.input&&this.input.addEventListener("input",t=>this.inputChange(t.target.value)),null!==this.altMetreInput&&this.altMetreInput.addEventListener("input",t=>this.altMetreInputChange(t.target.value))}async inputChange(t){var e,i,s;"true"==this.submitButton.dataset.accessoryRestriction?this.submitButton.disabled=!0:(e=Number(this.price),t=await this.checkWasteage(Number(t)),i=this.packSize,"Pack"===this.type?(s=Number(this.packPrice),this.anyPackCalc(s,t,i)):"Roll"===this.type?this.rollCalc(e,t):"Box"===this.type?this.boxCalc(e,t):"Tile"===this.type?this.tileCalc(e,t):"Board"===this.type?(s=Number(this.price)/100,this.boardCalc(s,t)):this.nonPackCalc(e,t))}async altMetreInputChange(t){var e,i;"true"==this.submitButton.dataset.accessoryRestriction?this.submitButton.disabled=!0:(e=Number(this.price),t=await this.checkWasteage(Number(t)),"Tile"===this.type?this.tileMetreCalc(e,t):"Pack"===this.type&&(e=Number(this.packPrice),i=this.packSize,this.altPackCalc(e,t,i)))}async anyPackCalc(t,e,i){var s="true"===this.evenPacks;let a,h,r;a=(r=(Number.isInteger(e/i)?(h=Number((e/i).toFixed(0)),e):(n=await this.roundUp(e,i),h=Number((n/i).toFixed(0)),n)).toFixed(2),t*h);var n=this.isEven(h);1===e?this.packOne(Number(this.price)):!0==s&&!1===n?this.evenPackCalc(h,i,t):(s=a.toFixed(2),this.totalPrice.innerHTML=s,this.tooltip.innerHTML=`This equals ${h} packs (${r}m<sup>2</sup>)`,this.setAttribute("data-units",h),this.altMetreInput.value=h),1!==e?this.checkDisabled(h):this.submitButton.disabled=!1}async evenPackCalc(t,e,i){t=Number(t)+1,e*=t,i=(i*t).toFixed(2);this.totalPrice.innerHTML=i,this.tooltip.innerHTML=`This equals ${t} packs (${e.toFixed(2)}m<sup>2</sup>)`,this.setAttribute("data-units",t),this.altMetreInput.value=t,this.checkDisabled(t)}async altPackCalc(t,e,i){var s,a="true"===this.evenPacks,h=this.isEven(e);!0==a&&!1===h?(h=i*(a=e+1),s=(t*a).toFixed(2),this.totalPrice.innerHTML=s,this.tooltip.innerHTML=`This equals ${a} packs (${h.toFixed(2)}m<sup>2</sup>)`,this.setAttribute("data-units",a),this.input.value=h.toFixed(2),this.checkDisabled(a)):(s=i*e,h=(t*e).toFixed(2),this.totalPrice.innerHTML=h,this.tooltip.innerHTML=`This equals ${e} packs (${s.toFixed(2)}m<sup>2</sup>)`,this.setAttribute("data-units",e),this.input.value=s.toFixed(2),this.checkDisabled(e))}async packOne(t){this.totalPrice.innerHTML=t/100,this.submitButton.disabled=!1,this.setAttribute("data-units","1sqm")}async wasteageCheck(t){var e=this.querySelector("#required-metres-squared").value;this.inputChange(e)}async rollCalc(t,e){var i=Number(this.rollWidth),e=Math.ceil(e),i=e*i,t=(e*t/100).toFixed(2);this.totalPrice.innerHTML=t,this.tooltip.innerHTML=`You require ${e}m length (${i}m<sup>2</sup>)`,this.setAttribute("data-units",e),this.checkDisabled(e)}async boxCalc(t,e){var i=Number(this.minQty),e=Math.ceil(e);i<=e&&(i=(e*t/100).toFixed(2),this.totalPrice.innerHTML=i,this.tooltip.innerHTML=`You require ${e} boxes`,this.setAttribute("data-units",e)),this.checkDisabled(e)}async boardCalc(t,e){var i=Number(this.boardSize),e=Math.ceil(e/i),i=e*i,t=(t*e).toFixed(2);this.totalPrice.innerHTML=t,this.tooltip.innerHTML=`You require ${e} boards (${i.toFixed(2)}m<sup>2</sup>)`,this.setAttribute("data-units",e),this.checkDisabled(e)}async tileCalc(t,e){var i=Number(this.minQty),s=await this.tilesInPacks(e),a=s*this.tilesPerPack;1===e?(e=(t/100).toFixed(2),this.totalPrice.innerHTML=e,this.setAttribute("data-units",1),e=await this.calculateTileUnits(),this.altMetreInput.value=(e=e).toFixed(2),this.tooltip.innerHTML=`You require 1 tile (${e.toFixed(2)}m<sup>2</sup>)`):i<=s&&(e=(a*t/100).toFixed(2),this.totalPrice.innerHTML=e,this.setAttribute("data-units",a),i=await this.calculateTileUnits(),this.altMetreInput.value=(t=a*i).toFixed(2),this.tooltip.innerHTML=`You require ${s} pack${1===s?"":"s"}, which contain${1===s?"s":""} ${a} tiles (${t.toFixed(2)}m<sup>2</sup>)`),this.checkDisabled(s)}async tileMetreCalc(e,i){if(Number(this.minQty)<=i){var s=await this.calculateTileUnits(),a=await this.checkRemainder(i,s);let t;t=0===a?i/s:i<s?1:(t=i/s,Math.ceil(t));var a=this.tilesPerPack,h=await this.roundUp(t,a),a=h/a,s=(this.input.value=h)*s,e=(e*h/100).toFixed(2);this.totalPrice.innerHTML=e,this.tooltip.innerHTML=`You require ${a} pack${1==a?"":"s"}, which contain${1==a?"s":""} ${h} tiles (${s.toFixed(2)}m<sup>2</sup>)`,this.setAttribute("data-units",h)}this.checkDisabled(i)}async calculateTileUnits(){var t=this.width.includes("mm")?"mm":this.width.includes("cm")?"cm":"m",e=this.width.includes("mm")?"mm":this.width.includes("cm")?"cm":"m";let i,s;return i="mm"==t?Number(this.width.replace(t,""))/1e3:"cm"==t?Number(this.width.replace(t,""))/100:Number(this.width.replace(t,"")),(s="mm"==e?Number(this.length.replace(e,""))/1e3:"cm"==t?Number(this.length.replace(e,""))/100:Number(this.length.replace(e,"")))*i}async tilesInPacks(t){var e=this.tilesPerPack;let i;if(0===await this.checkRemainder(t,e))return i=t/e;{const i=await await this.roundUp(t,e)/e;return i}}async nonPackCalc(t,e){var i=Number(this.minQty),s=Math.ceil(e);i<=s?this.minQtyNotice&&(this.minQtyNotice.style.display="none"):this.minQtyNotice&&this.minQtyNotice.removeAttribute("style");i=(t*s/100).toFixed(2);this.totalPrice.innerHTML=i,this.tooltip.innerHTML=`You require ${s}m length (${s}m<sup>2</sup>)`,this.setAttribute("data-units",s),this.checkDisabled(e)}roundUp(t,e){return Math.ceil(t/e)*e}isEven(t){return t%2==0}checkWasteage(t){return!0===this.wasteageFee.checked?t+.1*t:t}checkRemainder(t,e){return t%e}checkDisabled(t){t<Number(this.minQty)?(this.submitButton.disabled=!0,this.minQtyNotice&&this.minQtyNotice.removeAttribute("style")):(this.submitButton.disabled=!1,this.minQtyNotice&&"Pack"===this.type&&(this.minQtyNotice.style.display="none"))}}customElements.define("product-quantity-input",ProductQuantityInput);