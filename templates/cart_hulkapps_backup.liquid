{% comment %}
    DO NOT use the class of 'cart' anywhere in this template.
    The Quantity Break app doesn't like it when it's in, and
    causes some strange things to happen.

    I've replaced where the 'cart' class would be with 'class-table'.
{% endcomment %}

<div class="site-wrap site-wrap--cart">
    {% if cart.item_count > 0 %}
        <h1 class="title title--small title--cart">
            Your basket
        </h1>
        <form id="cart-form" action="/cart" method="post" novalidate>
            <table class="cart-table">
                <thead>
                    <tr class="cart__headings">
                        <th class="cart__heading cart-product__col">Product</th>
                        <th class="cart-product__col--large">&nbsp</th>
                        <th class="cart__heading cart-product__col">Price per unit</th>
                        <th class="cart__heading cart-product__col">Quantity</th>
                        <th class="cart__heading cart-product__col">Total</th>
                    </tr>
                </thead>
                <tbody>
                    {% for item in cart.items %}
                        {% comment %} Wholesale_Club_Item_Prices Start {% endcomment %}
                            {% if item.product %}{% assign base_product = item.product %}{% else %}{% assign base_product = item %}{% endif %}
                            {% if item.variant %}{% assign base_variant = item.variant %}{% else %}{% assign base_variant = item.selected_or_first_available_variant %}{% endif %}

                            {% if shop.metafields.sawholesale['base_price'] == blank %}
                                {% assign base_price = 'compare_at_price' %}
                            {% else %}
                                {% assign base_price = shop.metafields.sawholesale['base_price'] %}
                            {% endif %}

                            {% assign saw_discount = 0 %}{% assign saw_has_discount = false %}

                            {% if customer.tags != blank %}
                                {% for mf in base_product.metafields.sawholesale %}
                                    {% capture product_customer_tag %}{{ mf | first | replace: 'discount_', '' }}{% endcapture %}
                                    {% if customer.tags contains product_customer_tag %}
                                        {% assign saw_has_discount = true %}
                                        {% assign discount_key = product_customer_tag | prepend: 'discount_' %}
                                        {% assign price_key = product_customer_tag | prepend: 'price_' %}
                                        {% assign saw_discount = base_product.metafields.sawholesale[discount_key] | divided_by: 100.0 %}
                                    {% endif %}
                                {% endfor %}
                            {% endif %}

                            {% assign saw_discount = 1 | minus: saw_discount %}

                            {% if base_price == 'price' or base_variant.compare_at_price == blank  or base_variant.compare_at_price == 0 or base_variant.compare_at_price < base_variant.price %}
                                {% assign saw_variant_compare_at_price = base_variant.price %}
                            {% else %}
                                {% assign saw_variant_compare_at_price = base_variant.compare_at_price %}
                            {% endif %}

                            {% assign cpe = shop.metafields.sawholesale['cpe'] | default: "true" %}
                            {% if base_variant.metafields.sawholesale[price_key] != blank and cpe == "true" %}
                                {% assign saw_variant_price = base_variant.metafields.sawholesale[price_key] %}
                            {% else %}
                                {% assign saw_variant_price = saw_variant_compare_at_price | times: saw_discount %}
                            {% endif %}

                            {% if saw_has_discount == false or saw_variant_price >= saw_variant_compare_at_price %}
                                {% assign WCItem_OriginalPrice = item.original_price %}
                                {% assign WCItem_FinalPrice = item.final_price %}
                                {% assign WCItem_Price = item.price %}
                                {% assign WCItem_PriceMin = item.price_min %}
                                {% assign WCItem_PriceMax = item.price_max %}
                                {% assign WCItem_CompareAtPrice = item.compare_at_price %}
                                {% assign WCItem_CompareAtPriceMin = item.compare_at_price_min %}
                                {% assign WCItem_CompareAtPriceMax = item.compare_at_price_max %}
                                {% assign WCItem_OriginalLinePrice = item.original_line_price %}
                                {% assign WCItem_FinalLinePrice = item.final_line_price %}
                                {% assign WCItem_LinePrice = item.line_price %}
                            {% else %}
                                {% assign WCItem_OriginalPrice = saw_variant_compare_at_price %}
                                {% assign WCItem_FinalPrice = saw_variant_price %}
                                {% assign WCItem_Price = saw_variant_price %}
                                {% assign WCItem_PriceMin = item.price_min | times: saw_discount %}
                                {% assign WCItem_PriceMax = item.price_max | times: saw_discount %}
                                {% assign WCItem_CompareAtPrice = saw_variant_compare_at_price %}
                                {% if base_product.compare_at_price_min != 0 %}{% assign WCItem_CompareAtPriceMin = base_product.compare_at_price_min %}{% else %}{% assign WCItem_CompareAtPriceMin = base_product.price_min %}{% endif %}
                                {% if base_product.compare_at_price_max != 0 %}{% assign WCItem_CompareAtPriceMax = base_product.compare_at_price_max %}{% else %}{% assign WCItem_CompareAtPriceMax = base_product.price_max %}{% endif %}
                                {% assign WCItem_OriginalLinePrice = WCItem_OriginalPrice | round | times: item.quantity %}
                                {% assign WCItem_FinalLinePrice = WCItem_FinalPrice | round | times: item.quantity %}
                                {% assign WCItem_LinePrice = WCItem_Price | round | times: item.quantity %}
                            {% endif %}
                        {% comment %} Wholesale_Club_Item_Prices End {% endcomment %}

                        {% assign productType = item.product.type | downcase | replace: ' ', '_' | slice: 0, 20 %}

                        {% if item.product.variants.size > 1 %}
                            {% assign productPrice = item.variant.price | money_without_currency %}
                            {% assign productComparePrice = item.variant.compare_at_price | money_without_currency %}
                            {% assign productPricePerMetresSquared = item.variant.metafields.product_config.price_per_metres_squared %}
                            {% assign productMinQty = item.variant.metafields.product_config.minimum_qty %}
                            {% assign productWidth = item.variant.metafields.product_attribute.width %}
                            {% assign productRollWidth = item.variant.metafields[productType].roll_width %}
                        {% else %}
                            {% assign productPrice = item.product.price | money_without_currency %}
                            {% assign productComparePrice = item.product.compare_at_price | money_without_currency %}
                            {% assign productPricePerMetresSquared = item.product.metafields.product_config.price_per_metres_squared %}
                            {% assign productMinQty = item.variant.metafields.product_config.minimum_qty %}
                            {% assign productWidth = item.variant.metafields.product_attribute.width %}
                            {% assign productRollWidth = item.product.metafields[productType].roll_width %}
						{% endif %}
						
						{% assign productLength = item.variant.metafields.filters.length %}
						{% assign productPackSize = item.variant.metafields.product_attribute.pack_size %}

                        <tr class="cart-product {% if productType == 'samples' %}cart-sample-product{% endif %}">
                            <input type="hidden" data-hidden-data="length" value="{{ productLength }}">
                            <input type="hidden" data-hidden-data="width" value="{{ productWidth }}">
                            <input type="hidden" data-hidden-data="minimum_qty" value="{{ productMinQty }}">
                            <td class="cart-product__col">
                                {% if productType != 'samples' %}
                                    <a href="{{ item.url | within: collections.all }}">
                                        <img class="cart-product__img" src="{{ item | img_url: 'medium' }}" alt="{{ item.title | escape }}">
                                    </a>
                                {% else %}
                                    {% assign firstProp = item.properties | first %}
                                    {% assign sampleHandle = firstProp[1] | handleize %}
                                    {% assign sampleProduct = all_products[sampleHandle] %}
                                    <img class="cart-product__img" src="{{ sampleProduct | img_url: 'medium' }}" alt="Sample">
                                {% endif %}
                            </td>
                            <td class="cart-product__desc cart-product__col cart-product__col--large">
                                {% if productType != 'samples' %}
                                    <a class="cart-product__title" href="{{ item.url }}">
                                        <div class="js-product-title">
                                            {{- item.product.title -}}
                                        </div>
                                        {% if item.product.variants.size > 1 %}
                                            <div>
                                                {{- item.variant.title -}}
                                            </div>
                                        {%- endif -%}
                                    </a>
                                {% else %}
                                    {% comment %}
                                        If product is a sample, get the sample of property and print it out.
                                        It's essentially the title of product the user is ordering a sample of.
                                    {% endcomment %}
                                    {% assign firstProp = item.properties | first %}
                                    {% if firstProp[0] == 'Sample of' %}
                                        <div class="cart-product__title">
                                            Sample
                                        </div>
                                        <div class="js-sample-title">
                                            {{- firstProp[1] -}}
                                        </div>
                                        <div class="js-sample-duplicate-error cart-product__error-message">
                                            You cannot order a free sample of a product you are purchasing. Please remove this sample.
                                        </div>
                                    {% endif %}
                                {% endif %}
                                {% if item.variant.metafields.product_config.sale_metric == 'Pack' %}
                                    {% if productWidth && productLength %}
                                        <p>Plank / Tile Size: {{ productWidth }} x {{ productLength }}</p>
                                    {% endif %}
                                    <p>Pack Size: {{ productPackSize }}m²</p>
                                {% elsif item.variant.metafields.product_config.sale_metric == 'Board' %}
                                    {% if productWidth && productLength %}
                                        <p>Board Length: {{ productLength }}m</p>
                                        <p>Board Width: {{ productWidth }}mm</p>
                                    {% endif %}
                                {% elsif item.variant.metafields.product_config.sale_metric == 'Roll' %}
                                    <p>Roll Size: {{ productRollWidth }}m x {{ item.quantity }}m</p>
                                {% endif %}
                                {% if productPricePerMetresSquared %}
                                    <p>Price Per Metre: &#163;<span class="js-price-per-metres-squared">{{- productPricePerMetresSquared -}}</span>/m² inc VAT</p>
                                {% endif %}
                                {% if item.variant.metafields.product_config.sale_metric == 'Pack' %}
                                    <p>Total m² Required: <span class="js-metres-squared-required">{{ item.quantity | times: productPackSize }}</span>m²</p>
                                {% elsif item.variant.metafields.product_config.sale_metric == 'Board' %}
                                    {% if productWidth && productLength %}
                                        {% comment %}
                                            Board width is provided in millimetres, convert to metres
                                            e.g. 145mm = 0.145m
                                        {% endcomment %}
                                        {% assign boardWidthMetres = productWidth | divided_by: 1000.0 %}
                                        {% comment %}
                                            Calculate m² from board dimensions (length(m) * width(m))
                                        {% endcomment %}
                                        {% assign boardDimensons = productLength | times: boardWidthMetres %}
                                        {% comment %}
                                            Calculate the required m² (quantity * board m²)
                                        {% endcomment %}
                                        {% assign boardMetresRequired = item.quantity | times: boardDimensons %}
                                        <p>Total m² Required: <span class="js-metres-squared-required">{{ boardMetresRequired }}</span>m²</p>
                                        <p>Total Length Required: {{ productLength | times: item.quantity | round: 2 }}m</p>
                                    {% endif %}
                                {% elsif item.variant.metafields.product_config.sale_metric == 'Roll' %}
                                    <p>Total m² Required: <span class="js-metres-squared-required">{{ item.quantity | times: productRollWidth }}</span>m²</p>
                                {% endif %}
                                <div class="cart-product__remove">
                                    <a class="link link--filled" href="/cart/change?line={{ forloop.index }}&amp;quantity=0">Remove</a>
                                </div>
                            </td>
                            <td class="cart-product__col">
                                <p class="cart-product__price">
                                    <span class="cart__mobile-title">
                                        Price per unit:
                                    </span>
                                    <span class="ot_quantity_line" data-key="{{ item.key }}">
                                        {{- WCItem_Price | money -}}
                                    </span>
                                </p>
                            </td>
                            <td class="cart-product__col">
                                <div class="cart-product__quantity-wrap">
                                    <span class="cart__mobile-title">
                                        Quantity:
                                    </span>
                                    <input class="cart-product__quantity" type="number" name="updates[]" id="updates_{{ item.key }}" value="{{ item.quantity }}" min="0" {% if productType == 'samples' %}max="6"{% endif %}>
                                    {% if item.variant.metafields.product_config.sale_metric %}
                                        <p class="cart-product__quantity-name">
                                            {{ item.variant.metafields.product_config.sale_metric }}{% if item.quantity > 1 %}{% if item.variant.metafields.product_config.sale_metric == 'Box' %}es{% else %}s{% endif %}{% endif %}
                                        </p>
                                    {% endif %}
                                </div>
                                <p class="js-quantity-error cart-product__error-message">
                                    {% if productType != 'samples' %}
                                        Minimum quantity of {{ productMinQty }} {{ item.variant.metafields.product_config.sale_metric }}{% if item.variant.metafields.product_config.sale_metric == 'Box' %}es{% else %}s{% endif %} has not been met
                                    {% endif %}
                                </p>
                            </td>
                            <td class="cart-product__col">
                                {% if WCItem_OriginalLinePrice != WCItem_LinePrice %}
                                    <p class="cart-product__price cart-product__price--disc">
                                        {{- WCItem_OriginalLinePrice | money -}}
                                    </p>
                                {% endif %}
                                <p class="cart-product__price">
                                    <span class="cart__mobile-title">
                                        Total:
                                    </span>
                                    <span>
                                        {{- WCItem_LinePrice | money -}}
                                    </span>
                                </p>
                                {% for discount in item.discounts %}
                                    {{ discount.title }}
                                {% endfor %}
                                {% if customer.tags != blank %}
                                    {% for mf in base_product.metafields.sawholesale %}
                                        {% if customer.tags contains product_customer_tag %}
                                            {% if product_customer_tag %}
                                                <p class="cart-product__disc">
                                                    {{ product_customer_tag|capitalize }} Discount
                                                </p>
                                            {% endif %}
                                        {% endif %}
                                    {% endfor %}
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
            <div class="cart__bottom">
                <div class="cart__bottom-links">
                    <div class="cart__bottom-link">
                        <a class="link link--filled link--arrow" href="{{ shop.url }}">Continue shopping</a>
                    </div>
                    <div class="cart__bottom-link">
                        <button class="button-reset link link--filled" type="submit" name="update">Update Basket</button>
                    </div>
                </div>
                <div class="cart__bottom-right">
                    <div class="saw-extra-note"></div>
                    <div class="cart__total-price">
                        <span class="cart__price-label">Sub-total:</span>
                        <p class="cart__price">
                            <span class="saw-cart-original-total">
                                {{- cart.total_price | money -}}
                            </span>
                            <span class="saw-cart-total"></span>
                        </p>
                    </div>
                    <ul id="cart-error" class="cart__error"></ul>
                    <button id="checkout" class="button cart__checkout" type="submit" name="checkout">Checkout</button>
                    <img data-src="{{ 'payment-logos-1x.jpg' | asset_url }}" data-srcset="{{ 'payment-logos-2x.jpg' | asset_url }} 2x" alt="Accepted payment methods" class="js-lazy-load-image">
                </div>
            </div>
        </form>
    {% else %}
        <h1 class="title title--small title--cart">
            Your basket
        </h1>
        <p class="para">
            Your basket is empty
        </p>
    {% endif %}
    {% render 'wc_cart' %}
</div>
