{% comment %}
    DO NOT use the class of 'cart' anywhere in this template.
    The Quantity Break app doesn't like it when it's in, and
    causes some strange things to happen.

    I've replaced where the 'cart' class would be with 'class-table'.
{% endcomment %}

{%- assign SAMPLE_TITLE_CHECK = 'SAMPLE' -%}
{%- assign PRODUCT_SAMPLE_TYPE = 'product_sample_item' -%}

{%- assign accessoryRestriction = false -%}
{%- assign lussoAccessoryRestriction = false -%}

{%- assign hasFlooringItem = false -%}
{%- assign hasAccessoryItem = false -%}
{%- assign hasLussoFlooringItem = false -%}
{%- assign hasLussoAccessoryItem = false -%}

{%- if cart.item_count > 0 -%}
  {%- for item in cart.items -%}
    {%- assign isAccessoryItem = false -%}
    {%- assign isLussoItem = false -%}

    {%- for collection in item.product.collections -%}
      {%- if collection.title contains 'Accessories' -%}
        {%- assign hasAccessoryItem = true -%}
        {%- assign isAccessoryItem = true -%}
      {%- endif -%}
      {%- if collection.title contains 'Lusso'-%}
        {%- assign isLussoItem = true -%}
      {%- endif -%}
    {%- endfor -%}
    {%- if isAccessoryItem and isLussoItem -%}
      {%- assign hasLussoAccessoryItem = true -%}
    {%- endif -%}

    {% unless isAccessoryItem %}
      {% if item.final_line_price > 0 %}
        {%- assign hasFlooringItem = true -%}
        {%- if isLussoItem -%}
          {%- assign hasLussoFlooringItem = true -%}
        {%- endif -%}
      {% endif %}
    {% endunless %}
  {%- endfor -%}
{%- endif -%}

{% if hasAccessoryItem %}
  {% unless hasFlooringItem %}
    {%- assign accessoryRestriction = true -%}
  {% endunless %}
{% endif %}
{% if hasLussoAccessoryItem %}
  {% unless hasLussoFlooringItem %}
    {%- assign accessoryRestriction = true -%}
    {%- assign lussoAccessoryRestriction = true -%}
  {% endunless %}
{% endif %}

{%- assign anyProductOdd = false -%}

<div class="site-wrap site-wrap--cart">
    {% if cart.item_count > 0 %}
        <h1 class="title title--small title--cart">
            Your basket
        </h1>
        <form id="cart-form" action="/cart" method="post" novalidate>
            <table class="cart-table">
                <thead>
                    <tr class="cart__headings">
                        <th class="cart__heading cart-product__col">Product</th>
                        <th class="cart-product__col--large">&nbsp</th>
                        <th class="cart__heading cart-product__col">Price per unit</th>
                        <th class="cart__heading cart-product__col">Quantity</th>
                        <th class="cart__heading cart-product__col">Total</th>
                    </tr>
                </thead>
                <tbody>

                  {% assign sampleCount = 0 %}

                  {% for item in cart.items %}

                  {%- if item.variant.title contains SAMPLE_TITLE_CHECK and item.variant.price == 0 -%}
                    {%- assign freeSampleVariant = true -%}
                  {% else %}
                    {%- assign freeSampleVariant = false -%}
                  {%- endif -%}

                  {% if item.properties['_isOneSqMeterItem'] %}

                  <tr class="cart-product msq-product" data-varid ={{ item.id }}>

                    <td class="cart-product__col">

                      {% assign thisHandle = item.properties['Main Product'] | handleize %}
                      {% assign thisProduct = all_products[thisHandle] %}

                      {% if thisProduct.title != blank %}
                      	{% assign item_image = thisProduct.images.first %}
                      {% else %}
                      	{% assign item_image = item.image %}
                      {% endif %}

                    	<img class="cart-product__img" src="{{ item_image | img_url: 'master' }}" alt="item image">
                    </td>

                    <td class="cart-product__desc cart-product__col cart-product__col--large">
                      <a class="cart-product__title" href="{{ item.url }}">{{ item.properties['Main Product'] }}</a>
                      <div class="cart-product__remove">
                        <a class="link link--filled cart__remove" data-vid="{{ item.variant_id }}" href="/cart/change?line={{ forloop.index }}&amp;quantity=0">Remove</a>
                      </div>
                    </td>
                    <td class="cart-product__col">
                        <p class="cart-product__price single_price">
                            <span class="cart__mobile-title">Price per unit:</span>
                            <span class="ot_quantity_line" data-key="{{ item.key }}">{{- item.final_line_price | money -}}</span>
                        </p>
                    </td>
                    <td class="cart-product__col">
                        <div class="cart-product__quantity-wrap">
                            <span class="cart__mobile-title">
                                Quantity:
                            </span>
                          <span>1 {{ item.properties['Product Unit'] }}</span>
                        </div>
                    </td>
                    <td class="cart-product__col">
                        <p class="cart-product__price total_price">
                            <span class="cart__mobile-title">
                                Total:
                            </span>
                            <span>
                                {{- item.final_line_price | money -}}
                            </span>
                        </p>
                    </td>
                  </tr>
                {% else %}

                  {% comment %} Wholesale_Club_Item_Prices Start {% endcomment %}
                    {% if item.product %}{% assign base_product = item.product %}{% else %}{% assign base_product = item %}{% endif %}
                    {% if item.variant %}{% assign base_variant = item.variant %}{% else %}{% assign base_variant = item.selected_or_first_available_variant %}{% endif %}

                    {% if shop.metafields.sawholesale['base_price'] == blank %}
                        {% assign base_price = 'compare_at_price' %}
                    {% else %}
                        {% assign base_price = shop.metafields.sawholesale['base_price'] %}
                    {% endif %}

                    {% assign saw_discount = 0 %}{% assign saw_has_discount = false %}

                    {% if customer.tags != blank %}
                        {% for mf in base_product.metafields.sawholesale %}
                            {% capture product_customer_tag %}{{ mf | first | replace: 'discount_', '' }}{% endcapture %}
                            {% if customer.tags contains product_customer_tag %}
                                {% assign saw_has_discount = true %}
                                {% assign discount_key = product_customer_tag | prepend: 'discount_' %}
                                {% assign price_key = product_customer_tag | prepend: 'price_' %}
                                {% assign saw_discount = base_product.metafields.sawholesale[discount_key] | divided_by: 100.0 %}
                            {% endif %}
                        {% endfor %}
                    {% endif %}

                    {% assign saw_discount = 1 | minus: saw_discount %}

                    {% if base_price == 'price' or base_variant.compare_at_price == blank  or base_variant.compare_at_price == 0 or base_variant.compare_at_price < base_variant.price %}
                        {% assign saw_variant_compare_at_price = base_variant.price %}
                    {% else %}
                        {% assign saw_variant_compare_at_price = base_variant.compare_at_price %}
                    {% endif %}

                    {% assign cpe = shop.metafields.sawholesale['cpe'] | default: "true" %}
                    {% if base_variant.metafields.sawholesale[price_key] != blank and cpe == "true" %}
                        {% assign saw_variant_price = base_variant.metafields.sawholesale[price_key] %}
                    {% else %}
                        {% assign saw_variant_price = saw_variant_compare_at_price | times: saw_discount %}
                    {% endif %}

                    {% if saw_has_discount == false or saw_variant_price >= saw_variant_compare_at_price %}
                        {% assign WCItem_OriginalPrice = item.original_price %}
                        {% assign WCItem_FinalPrice = item.final_price %}
                        {% assign WCItem_Price = item.price %}
                        {% assign WCItem_PriceMin = item.price_min %}
                        {% assign WCItem_PriceMax = item.price_max %}
                        {% assign WCItem_CompareAtPrice = item.compare_at_price %}
                        {% assign WCItem_CompareAtPriceMin = item.compare_at_price_min %}
                        {% assign WCItem_CompareAtPriceMax = item.compare_at_price_max %}
                        {% assign WCItem_OriginalLinePrice = item.original_line_price %}
                        {% assign WCItem_FinalLinePrice = item.final_line_price %}
                        {% assign WCItem_LinePrice = item.line_price %}
                    {% else %}
                        {% assign WCItem_OriginalPrice = saw_variant_compare_at_price %}
                        {% assign WCItem_FinalPrice = saw_variant_price %}
                        {% assign WCItem_Price = saw_variant_price %}
                        {% assign WCItem_PriceMin = item.price_min | times: saw_discount %}
                        {% assign WCItem_PriceMax = item.price_max | times: saw_discount %}
                        {% assign WCItem_CompareAtPrice = saw_variant_compare_at_price %}
                        {% if base_product.compare_at_price_min != 0 %}{% assign WCItem_CompareAtPriceMin = base_product.compare_at_price_min %}{% else %}{% assign WCItem_CompareAtPriceMin = base_product.price_min %}{% endif %}
                        {% if base_product.compare_at_price_max != 0 %}{% assign WCItem_CompareAtPriceMax = base_product.compare_at_price_max %}{% else %}{% assign WCItem_CompareAtPriceMax = base_product.price_max %}{% endif %}
                        {% assign WCItem_OriginalLinePrice = WCItem_OriginalPrice | round | times: item.quantity %}
                        {% assign WCItem_FinalLinePrice = WCItem_FinalPrice | round | times: item.quantity %}
                        {% assign WCItem_LinePrice = WCItem_Price | round | times: item.quantity %}
                    {% endif %}
                  {% comment %} Wholesale_Club_Item_Prices End {% endcomment %}

                  {% assign productType = item.product.type | downcase | replace: ' ', '_' | slice: 0, 20 %}

                  {% if item.product.variants.size > 1 %}
                      {% assign productPrice = item.variant.price | money_without_currency %}
                      {% assign productComparePrice = item.variant.compare_at_price | money_without_currency %}
                      {% assign productPricePerMetresSquared = item.variant.metafields.product_config.price_per_metres_squared %}
                      {% assign productLength = item.variant.metafields.filters.length %}
                      {% assign productRollWidth = item.variant.metafields[productType].roll_width %}
                  {% else %}
                      {% assign productPrice = item.product.price | money_without_currency %}
                      {% assign productComparePrice = item.product.compare_at_price | money_without_currency %}
                      {% assign productPricePerMetresSquared = item.product.metafields.product_config.price_per_metres_squared %}
                      {% assign productLength = item.variant.metafields.filters.length %}
                      {% assign productRollWidth = item.product.metafields[productType].roll_width %}
                  {% endif %}

                  {% assign productMinQty = item.variant.metafields.product_config.minimum_qty | plus: 0 %}
                  {% assign productWidth = item.variant.metafields.product_attribute.width %}

                  {% assign productPackSize = item.variant.metafields.product_attribute.pack_size %}
                  {% assign itemCollections = item.product %}
                  {% assign colCount = itemCollections.collections.size %}

                  <tr data-collections="{% for collectionTitle in itemCollections.collections%}{{collectionTitle.title}}{% if forloop.index < colCount %},{% endif %}{% endfor %}" data-varID="{{item.variant_id}}" class="cart-product {% if productType == PRODUCT_SAMPLE_TYPE %}cart-sample-product{% endif %}">
                      <input type="hidden" data-hidden-data="length" value="{{ productLength }}">
                      <input type="hidden" data-hidden-data="width" value="{{ productWidth }}">
                      <input type="hidden" data-hidden-data="minimum_qty" value="{{ productMinQty | plus: 0 }}">
                      <td class="cart-product__col">
                          {% assign itemUrl = item.url %}
                          {% if productType == PRODUCT_SAMPLE_TYPE %}
                              {% assign originHandle = item.properties['Sample of'] | handleize %}
                              {% assign originProduct = all_products[originHandle] %}
                              {% assign itemUrl = originProduct.url %}
                          {% endif %}
                          <a href="{{ itemUrl }}" class="{{productType}}-{{originHandle}}">
                              <img class="cart-product__img" src="{{ item | img_url: 'medium' }}" alt="{{ item.title | escape }}">
                          </a>
                      </td>
                      <td class="cart-product__desc cart-product__col cart-product__col--large">
                        {% if productType != PRODUCT_SAMPLE_TYPE %}
                          <a class="cart-product__title" href="{{ item.url }}">
                              <div class="js-product-title">
                                  {{- item.product.title -}}
                              </div>
                              {% if item.product.variants.size > 1 and item.variant.title != "Default Size" %}
                                  <div>
                                      {{- item.variant.title -}}
                                  </div>
                              {%- endif -%}
                          </a>
                        {% else %}
                          {% assign sampleCount = sampleCount | plus: 1 %}
                          {% comment %}
                              If product is a sample, get the sample of property and print it out.
                              It's essentially the title of product the user is ordering a sample of.
                          {% endcomment %}
                          {% assign firstProp = item.properties | first %}
                          {% if item.properties['Sample of'] %}
                            <div class="cart-product__title">
                                {{- item.product.title -}}
                            </div>
                            <div class="js-sample-title">
                                {{ item.properties['Sample of'] }}
                            </div>
                            {% comment %} <div class="js-sample-duplicate-error cart-product__error-message">
                                You cannot order a free sample of a product you are purchasing. Please remove this sample.
                            </div> {% endcomment %}
                          {% endif %}
                        {% endif %}

                        {%- if freeSampleVariant == true -%}
                        {%- else -%}
                          {% if item.variant.metafields.product_config.sale_metric == 'Pack' %}
                            {% if productWidth and productLength %}
                              <p>Plank / Tile Size: {{ productWidth }} x {{ productLength }}</p>
                            {% endif %}
                            {%- if productPackSize != blank -%}
                              <p>Pack Size: {{ productPackSize }}m²</p>
                            {%- endif -%}
                          {% elsif item.variant.metafields.product_config.sale_metric == 'Board' %}
                            {% if productWidth and productLength %}
                              <p>Board Length: {{ productLength }}m</p>
                              <p>Board Width: {{ productWidth }}mm</p>
                            {% endif %}
                          {% elsif item.variant.metafields.product_config.sale_metric == 'Roll' %}
                            <p>Roll Size: {{ productRollWidth }}m x {{ item.quantity }}m</p>
                          {% endif %}
                          {% if productPricePerMetresSquared and productPackSize != blank %}
                            <p>Price Per Metre: <span class="js-price-per-metres-squared">{{ productPricePerMetresSquared | times: 100 | money }}</span>/m² inc VAT</p>
                          {% endif %}
                          {% if item.variant.metafields.product_config.sale_metric == 'Pack' and productPackSize != blank %}
                            <p>Total m² Required: <span class="js-metres-squared-required">{{ item.quantity | times: productPackSize }}</span>m²</p>
                          {% elsif item.variant.metafields.product_config.sale_metric == 'Board' %}
                            {% if productWidth and productLength %}
                              {% comment %}
                                Board width is provided in millimetres, convert to metres
                                e.g. 145mm = 0.145m
                              {% endcomment %}
                              {% assign boardWidthMetres = productWidth | divided_by: 1000.0 %}
                              {% comment %}
                                Calculate m² from board dimensions (length(m) * width(m))
                              {% endcomment %}
                              {% assign boardDimensons = productLength | times: boardWidthMetres %}
                              {% comment %}
                                Calculate the required m² (quantity * board m²)
                              {% endcomment %}
                              {% assign boardMetresRequired = item.quantity | times: boardDimensons %}
                              <p>Total m² Required: <span class="js-metres-squared-required">{{ boardMetresRequired }}</span>m²</p>
                              <p>Total Length Required: {{ productLength | times: item.quantity | round: 2 }}m</p>
                            {% endif %}
                          {% elsif item.variant.metafields.product_config.sale_metric == 'Roll' %}
                            <p>Total m² Required: <span class="js-metres-squared-required">{{ item.quantity | times: productRollWidth }}</span>m²</p>
                          {% endif %}
                        {%- endif -%}
                          <div class="cart-product__remove">
                              <a class="link link--filled cart__remove" data-vid="{{ item.variant_id }}" href="/cart/change?line={{ forloop.index }}&amp;quantity=0">Remove</a>
                          </div>
                      </td>
                      <td class="cart-product__col">
                          <p class="cart-product__price single_price">
                              <span class="cart__mobile-title">Price per unit:</span>
                              <span class="ot_quantity_line" data-key="{{ item.key }}">{{- WCItem_Price | money -}}</span>
                          </p>
                      </td>
                      <td class="cart-product__col">
                          <div class="cart-product__quantity-wrap {{ productType }}">
                              <span class="cart__mobile-title">Quantity:</span>
                              {%- if item.variant.metafields.product_config.sale_metric != "Tile" -%}
                                <input {% if productType == PRODUCT_SAMPLE_TYPE %}disabled{% endif %} class="cart-product__quantity" type="number" name="updates[]" id="updates_{{ item.key }}" value="{{ item.quantity }}" min="0" {% if productType == PRODUCT_SAMPLE_TYPE %}max="{{ shop.metafields.product_samples.max_limit }}"{% endif %}>
                              {%- else -%}
                                <span class="">
                                  {{ item.quantity }}
                                </span>
                              {%- endif -%}
                              {% if item.variant.metafields.product_config.sale_metric %}
                                  <p class="cart-product__quantity-name">
                                      {{ item.variant.metafields.product_config.sale_metric }}{% if item.quantity > 1 %}{% if item.variant.metafields.product_config.sale_metric == 'Box' %}es{% else %}s{% endif %}{% endif %}
                                  </p>
                              {% endif %}
                          </div>
                          {%- if productMinQty > item.quantity -%}
                            {%- assign belowMinimumQuantity = true -%}
                            {%- assign anyProductBelow = true -%}
                          {%- else -%}
                            {%- assign belowMinimumQuantity = false -%}
                          {%- endif -%}

                          {%- assign evenPackRestriction = false -%}
                          {%- for tag in item.product.tags -%}
                            {%- if tag == "EvenPackRestriction" -%}
                              {%- assign evenPackRestriction = true -%}
                            {%- endif -%}
                          {%- endfor -%}

                          {%- assign checkEvenOdd = item.quantity | modulo: 2 -%}
                          {%- assign productOdd = false -%}
                          {%- if checkEvenOdd != 0 and evenPackRestriction == true -%}
                            {%- assign productOdd = true -%}
                            {%- assign anyProductOdd = true -%}
                          {%- endif -%}

                          {%- if belowMinimumQuantity == true -%}
                            <p class="js-quantity-error cart-product__error-message">
                              {% if productType != PRODUCT_SAMPLE_TYPE %}
                                Minimum quantity of {{ productMinQty }} {{ item.variant.metafields.product_config.sale_metric }}{% if item.variant.metafields.product_config.sale_metric == 'Box' %}es{% else %}s{% endif %} has not been met
                              {% endif %}
                            </p>
                          {%- elsif productOdd == true -%}
                            <p class="js-quantity-error cart-product__error-message">
                              Cannot order odd number of {{ item.variant.metafields.product_config.sale_metric }}{% if item.variant.metafields.product_config.sale_metric == 'Box' %}es{% else %}s{% endif %}
                            </p>
                          {%- endif -%}
                      </td>
                      <td class="cart-product__col">
                        {% if WCItem_OriginalLinePrice != WCItem_LinePrice %}
                            <p class="cart-product__price cart-product__price--disc">
                                {{- WCItem_OriginalLinePrice | money -}}
                            </p>
                        {% endif %}
                        <p class="cart-product__price total_price">
                            <span class="cart__mobile-title">
                                Total:
                            </span>
                            <span class="ot-quantity-cart-total" data-id="{{ item.id }}">
                                <span class="money">{{- WCItem_LinePrice | money -}}</span>
                            </span>
                        </p>
                        {% for discount in item.discounts %}
                            {{ discount.title }}
                        {% endfor %}
                        {% if customer.tags != blank %}
                            {% for mf in base_product.metafields.sawholesale %}
                                {% if customer.tags contains product_customer_tag %}
                                    {% if product_customer_tag %}
                                        <p class="cart-product__disc">
                                            {{ product_customer_tag|capitalize }} Discount
                                        </p>
                                    {% endif %}
                                {% endif %}
                            {% endfor %}
                        {% endif %}
                      </td>
                  </tr>
                  {% endif %}
                  {% endfor %}
                </tbody>
            </table>

            {% comment %} Start cart__bottom {% endcomment %}
            <div class="cart__bottom">
                <div class="cart__bottom-links">
                    <div class="cart__bottom-link">
                        <a class="link link--filled link--arrow" href="{{ shop.url }}">Continue shopping</a>
                    </div>
                    <div class="cart__bottom-link">
                        <button class="button-reset link link--filled" type="submit" name="update">Update Basket</button>
                    </div>
                </div>
                <div class="cart__bottom-right">
                  <div class="saw-extra-note"></div>
                  <div class="cart__total-price">
                      <span class="cart__price-label">Sub-total:</span>
                      <p class="cart__price">
                          <span class="saw-cart-original-total ot-subtotal">
                              {{- cart.total_price | money -}}
                          </span>
                          <span class="saw-cart-total"></span>
                      </p>
                  </div>
                  <ul id="cart-error" class="cart__error"></ul>
                  {% comment %} SAMPLE ADDITION {% endcomment %}
                  {% assign sampleFinder = false %}
                  {% for item in cart.items %}
                       {% if item.title contains SAMPLE_TITLE_CHECK %}
                          {% assign sampleFinder = true %}
                       {% else %}
                          {% assign sampleFinder = false %}
                          {% break %}
                       {% endif %}
                  {% endfor %}
                  {%- if sampleFinder -%}
                    {% render 'delivery-date-picker' %}
                    <p id="checkoutSubmit" class="button cart__checkout">Checkout</p>
                    <button id="checkout" type="submit" name="checkout" style="display: none;"></button>
                    {% comment %} <a data-sample-count="{{ sampleCount }}" id="checkout_btn" class="button cart__checkout" href="javascript:void(0)">Checkout</a>
                    <p style="display:none; color:red;" class="samples-exceeded">Sorry, you have added more than 3 Samples in your cart. Please remove some items to continue.</p> {% endcomment %}
                  {%- elsif accessoryRestriction == true -%}
                    <div style="display: none;" class="accessories_barring accessories_limit-width">
                      {% if lussoAccessoryRestriction %}
                        {{ 'products.product.accessories.lusso_restriction' | t }}
                      {% else %}
                        {{ 'products.product.accessories.restriction' | t }}
                      {% endif %}
                      {% render 'accessories-restriction-style' %}
                      {% break %}
                    </div>
                  {%- elsif anyProductBelow == true -%}
                    <div class="cart-product-error-container">
                      <p class="cart-product__error-message">
                        Minimum quantity not reached
                      </p>
                    </div>
                  {%- elsif anyProductOdd == true -%}
                    <div class="cart-product-error-container">
                      <p class="cart-product__error-message">
                        Cannot order odd quantity of product
                      </p>
                    </div>
                  {%- else -%}
                    {% render 'delivery-date-picker' %}
                    <p id="checkoutSubmit" class="button cart__checkout">Checkout</p>
                    <button id="checkout" type="submit" name="checkout" style="display: none;"></button>
                  {% endif %}
                  {% comment %} <img data-src="{{ 'payment-logos-new-1x.jpg' | asset_url }}" data-srcset="{{ 'payment-logos-new-2x.jpg' | asset_url }} 2x" alt="Accepted payment methods"> {% endcomment %}
                </div>
            </div>
            {% comment %} End cart__bottom {% endcomment %}
        </form>
    {% else %}
        <h1 class="title title--small title--cart">
            Your basket
        </h1>
        <p class="para">
            Your basket is empty
        </p>
    {% endif %}
	{% render 'wc_cart' %}
</div>

<script>
	// Checkout Event - Do Not Delete

	window.addEventListener('DOMContentLoaded', (event) => {
		document.querySelector('#checkoutSubmit').addEventListener('click', async function handleClick() {
			document.querySelector('#checkout').click();
		});
	});
</script>

{%- if settings.cart_type == 'drawer' -%}
<script>
  // Auto open cart drawer
  window.addEventListener('DOMContentLoaded', (event) => {
    const cart = document.querySelector('cart-drawer');
    if (cart) {
      cart.open();
    }
  });
</script>
{%- endif -%}
